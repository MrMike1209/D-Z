#include "pch.h"
#include <iostream>
#include <conio.h>
#include<Windows.h>
#include <cstdlib>
#include <clocale>

using namespace std;

void gotoxy(short x, short y) {
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), (COORD{ x, y }));
}
int AMI, AMIE;
int Arr[10];
int iv = 0;

const int Nami = 4;
const int Namie = 2;

void menu()
{
	system("cls");
	cout << "Показать масив" << endl;
	cout << "Сортировка по возростанию" << endl;
	cout << "Сортировка по убывния" << endl;
	cout << "EXIT" << endl;

}

void Arrey()
{
	for (int i = 0; i < 10; i++)
	{
		Arr[i] = rand() % 99;
	}
}

void ArreyPocaz()
{
	if (iv == 0) {
		system("cls");
	}

	for (int i = 0; i < 10; i++)
	{
		cout << Arr[i] << ";";
	}
	cout << endl;
}

void ArSortUp()
{
	int buf;
	Arrey();
	ArreyPocaz();
	iv++;
	buf = Arr[0];
	for (int i = 0; i < 10; i++)
	{
		for (int j = 0; j < 9; j++) {
			if (Arr[j + 1] < Arr[j]) {
				buf = Arr[j];
				Arr[j] = Arr[j + 1];
				Arr[j + 1] = buf;
			}
		}
	}
	cout << "Отсортированый массив" << endl;
	ArreyPocaz();
	iv--;

}

void ArSortDaun()
{
	int buf;
	Arrey();
	ArreyPocaz();
	iv++;
	buf = Arr[0];
	for (int i = 0; i < 10; i++)
	{
		for (int j = 0; j < 9; j++) {
			if (Arr[j + 1] > Arr[j]) {
				buf = Arr[j];
				Arr[j] = Arr[j + 1];
				Arr[j + 1] = buf;
			}
		}
	}
	cout << "Отсортированый массив" << endl;
	ArreyPocaz();
	iv--;
}

void ExitGlobal()
{
	bool Exit = false;
	int ch;

	while (!Exit) {
		system("cls");
		cout << "Yes" << endl;
		cout << "No" << endl;
		gotoxy(0, AMIE);
		ch = _getch();
		if (ch == 224)
			ch = _getch();
		switch (ch)
		{
		case 72: AMIE--; break;
		case 80:  AMIE++;  break;
		case 13:
			if (AMIE == 0)
			{
				system("cls");
				exit(1);

			}
			else if (AMIE == 1)
			{
				Exit = 1;
			}

			break;

		}
		if (AMIE < 0) AMIE = Namie - 1;
		if (AMIE > Namie - 1) AMIE = 0;
	}
}

int main()
{
	setlocale(LC_ALL, "RUS");
	bool exit = false;
	int ch;

	while (!exit)
	{
		menu();
		gotoxy(0, AMI);
		ch = _getch();
		if (ch == 224)
			ch = _getch();
		switch (ch)
		{
		case 27:ExitGlobal(); break;
		case 72: AMI--; break;
		case 80:  AMI++;  break;
		case 13:
			if (AMI == 0)
			{
				Arrey();
				ArreyPocaz();
				_getch();
			}
			else if (AMI == 1)
			{
				ArSortUp();
				_getch();
			}

			else if (AMI == 2)
			{
				ArSortDaun();
				_getch();

			}
			else if (AMI == 3)
			{
				ExitGlobal();

			}
			break;
		}
		if (AMI < 0) AMI = Nami - 1;
		if (AMI > Nami - 1) AMI = 0;
	}

	return 0;
}
